Goal 1: Have a minimum viable product (That being the core mechanics ready) by the end of the month. (Achieved)

Goal 2: Have a hud ready by the next month. (Achieved)

Goal 3: A death and respawn system. (Achieved)

Goal 4: One or two new enemies. (Achieved)

Goal 5: Have the game ready and converted to .exe by the end of the month.

Project structure

Every object (Static or dynamic) like a player or an enemy or a hazard will inherit from a game object class
or a sprite class. (I'll see once I start working on it.)

Ideally, the game should also have a system that will handle the animation of sprite sheets.


Possible inheritance order

class GameObject(pygame.sprite.Sprite):

class GameCharacter(GameObject):

class Player(GameCharacter):

class Enemy(GameCharacter):


To Do list

1: Add a particle system.

2: Increasing difficulty. (That could be faster enemies or more enemies/hazards.)

3: Improve the sprite sheet animation system


In progress list

(None)

Complete

1: Make a functional player class.

2: Make a system that manages animations with sprite sheets.

3: Make a functional projectile class or a system for the player to shoot projectiles.

4: Make a functional enemy class.

5: Fix the bugged way the player's ship acts when reaching the limit's of the window.

6: Make a system for handling collision between objects.

7: Restructure the code with multiple files to make it easier to work with.

8: Add a death system.

9: Add a HUD with things like score, and lives.

10: Make a system for handling audio. (That being playing sound effects and music.)

11: Make a system that manages game states. (Title screen, in game state, pause screen, and game over screen.)
